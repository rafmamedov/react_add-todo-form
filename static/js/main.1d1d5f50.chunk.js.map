{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","todoList","setTodoList","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","isError","sort","a","b","length","Number","type","placeholder","value","onChange","test","target","disabled","userData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d1d5f50.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\n\nexport interface User {\n  id: number,\n  name: string,\n  email: string,\n}\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { User, UserInfo } from '../UserInfo/UserInfo';\n\nexport interface Todo {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n}\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo, TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './components/TodoInfo';\nimport { User } from './components/UserInfo';\nimport { TodoList } from './components/TodoList';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [todoList, setTodoList] = useState(todos);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (titleError) {\n      setTitleError(false);\n    }\n\n    if (/^[a-zA-Z0-9 ]*$/.test(event.target.value)) {\n      setTitle(event.target.value);\n    }\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (userError) {\n      setUserError(false);\n    }\n\n    setUserId(event.target.value);\n  };\n\n  const addTodoItem = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    let isError = false;\n\n    if (!title) {\n      setTitleError(true);\n      isError = true;\n    }\n\n    if (userId === '0') {\n      setUserError(true);\n      isError = true;\n    }\n\n    if (isError) {\n      return;\n    }\n\n    const id = todos\n      .map(todo => todo.id)\n      .sort((a, b) => a - b)[todos.length - 1] + 1;\n\n    const user = getUser(Number(userId));\n\n    const todo = {\n      id,\n      title,\n      userId: Number(userId),\n      completed: false,\n      user,\n    };\n\n    setTodoList([...todos, todo]);\n    setTitle('');\n    setUserId('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodoItem}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            placeholder=\"Choose a user\"\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(userData => (\n              <option\n                value={userData.id}\n                key={userData.id}\n              >\n                {userData.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}